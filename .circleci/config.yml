# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

jobs:
  build_arm:
    machine: true

    working_directory: ~/UserLAnd-Assets-Support

    steps:
      - checkout
      - run:
          name: build arm assets
          command: sudo ./buildArch.sh arm
      - persist_to_workspace:
          root: .
          paths:
            - output/release/*    

  build_arm64:
    machine: true

    working_directory: ~/UserLAnd-Assets-Support

    steps:
      - checkout
      - run:
          name: build arm64 assets
          command: sudo ./buildArch.sh arm64
      - persist_to_workspace:
          root: .
          paths:
            - output/release/*    

  build_x86:
    machine: true

    working_directory: ~/UserLAnd-Assets-Support

    steps:
      - checkout
      - run:
          name: build x86 assets
          command: sudo ./buildArch.sh x86
      - persist_to_workspace:
          root: .
          paths:
            - output/release/*    

  build_x86_64:
    machine: true

    working_directory: ~/UserLAnd-Assets-Support

    steps:
      - checkout
      - run:
          name: build x86_64 assets
          command: sudo ./buildArch.sh x86_64
      - persist_to_workspace:
          root: .
          paths:
            - output/release/*    

  publish-github-release:
    docker:
      - image: circleci/golang:1.12
      
    steps:
      - attach_workspace:
          at: .

      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$CIRCLE_TAG
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete -prerelease ${VERSION} output/release/

  publish-github-commit:
    machine: true

    working_directory: ~/UserLAnd-Assets-Support

    steps:
      - checkout
      - run:
          name: "Make a commit on GitHub"
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "<email>"
            git config user.name "Deployment Bot"
            git checkout -b auto-build
            git add -A
            git commit --allow-empty -m "Auto-build ${VERSION}"
            # Push quietly to prevent showing the token in log
            git push -q https://${GITHUB_TOKEN}@github.com/CypherpunkArmory/UserLAnd-Assets-Support.git auto-build

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_arm:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: auto-build
      - build_arm64:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: auto-build
      - build_x86:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: auto-build
      - build_x86_64:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: auto-build
      - publish-github-release:
          requires:
            - build_arm
            - build_arm64
            - build_x86
            - build_x86_64
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
      - publish-github-commit:
          requires:
            - build_arm
            - build_arm64
            - build_x86
            - build_x86_64
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
